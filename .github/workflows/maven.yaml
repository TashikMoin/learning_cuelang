name: Build Java with Maven
"on":
  workflow_call:
    inputs:
      codename:
        description: Application codename
        required: true
        type: string
      maven-docker-image:
        description: Image to build the jar file with
        default: 746905583608.dkr.ecr.eu-west-1.amazonaws.com/xyb-linux:jdk-21-maven-3.9-node-18
        type: string
      svc:
        description: Is service component?
        required: false
        default: false
        type: boolean
      ui:
        description: Is UI component?
        required: false
        default: false
        type: boolean
      mfe:
        description: Is micro-frontend component?
        required: false
        default: false
        type: boolean
      dbm:
        description: Is database migration component?
        required: false
        default: false
        type: boolean
jobs:
  setup:
    runs-on: ${{ vars.GHA_RUNNER }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: "0"
      - name: Log in to ECR
        run: aws ecr get-login-password --region ${{ vars.AWS_REGION }} | docker login --username AWS --password-stdin 746905583608.dkr.ecr.eu-west-1.amazonaws.com
      - name: Pull base image
        shell: bash
        run: docker pull ${{ inputs.maven-docker-image }}
      - name: Fix '~/.m2' permissions
        run: sudo chown -R "$(whoami):$(id -ng)" ~/.m2/
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-mvn-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-mvn-
      - id: setuprevision
        name: Set up revision
        run: |-
          curl --create-dirs -o "${PWD}/.ci-scripts/git-revision.sh" \
              -L "https://${{ secrets.REPO_CONTENTS_READ_PAT }}@raw.githubusercontent.com/xybteam/shared-actions-workflows/main/.github/scripts/git-revision.sh"
          chmod +x "${PWD}/.ci-scripts/git-revision.sh"
          bash "${PWD}/.ci-scripts/git-revision.sh"
        shell: bash
      - id: buildproject
        name: Build project
        run: |-
          curl --create-dirs -o "${PWD}/.ci-scripts/mvn-build.sh" \
              -L "https://${{ secrets.REPO_CONTENTS_READ_PAT }}@raw.githubusercontent.com/xybteam/shared-actions-workflows/main/.github/scripts/mvn-build.sh"
          chmod +x "${PWD}/.ci-scripts/mvn-build.sh"
          bash "${PWD}/.ci-scripts/mvn-build.sh"
        shell: bash
        env:
          REVISION: ${{ steps.setuprevision.outputs.BUILD_REVISION }}
          IS_RELEASE: ${{ steps.setuprevision.outputs.IS_RELEASE }}
          CODENAME: ${{ inputs.codename }}
          SONAR_URL: ${{ vars.SONAR_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          MAVEN_DOCKER_IMAGE: ${{ inputs.maven-docker-image }}
      - if: inputs.svc == true
        name: Build push ${{ inputs.codename }}-svc
        run: |-
          docker build --pull \
          --label org.opencontainers.image.created="$(date --rfc-3339=seconds --utc)" \
          --label org.opencontainers.image.vendor="XYB" \
          --label io.xyb.application="${{ inputs.codename }}" \
          --label io.xyb.build="${{ github.run.id }}" \
          --label io.xyb.repository="${{ github.repository }}" \
          --label io.xyb.repositoryVendor="GitHub" \
          --label org.opencontainers.image.revision="${{ github.sha }}" \
          --tag "$TAG" "$DOCKERFILE_PATH"
          docker push "$TAG"
        shell: bash
        env:
          TAG: 746905583608.dkr.ecr.eu-west-1.amazonaws.com/${{ inputs.codename }}-svc:${{ steps.setuprevision.outputs.BUILD_REVISION }}
          DOCKERFILE_PATH: ${{ inputs.codename }}-svc
      - if: inputs.ui == true
        name: Build push ${{ inputs.codename }}-ui
        run: |-
          docker build --pull \
          --label org.opencontainers.image.created="$(date --rfc-3339=seconds --utc)" \
          --label org.opencontainers.image.vendor="XYB" \
          --label io.xyb.application="${{ inputs.codename }}" \
          --label io.xyb.build="${{ github.run.id }}" \
          --label io.xyb.repository="${{ github.repository }}" \
          --label io.xyb.repositoryVendor="GitHub" \
          --label org.opencontainers.image.revision="${{ github.sha }}" \
          --tag "$TAG" "$DOCKERFILE_PATH"
          docker push "$TAG"
        shell: bash
        env:
          TAG: 746905583608.dkr.ecr.eu-west-1.amazonaws.com/${{ inputs.codename }}-ui:${{ steps.setuprevision.outputs.BUILD_REVISION }}
          DOCKERFILE_PATH: ${{ inputs.codename }}-ui
      - if: inputs.dbm == true
        name: Build push ${{ inputs.codename }}-dbm
        run: |-
          docker build --pull \
          --label org.opencontainers.image.created="$(date --rfc-3339=seconds --utc)" \
          --label org.opencontainers.image.vendor="XYB" \
          --label io.xyb.application="${{ inputs.codename }}" \
          --label io.xyb.build="${{ github.run.id }}" \
          --label io.xyb.repository="${{ github.repository }}" \
          --label io.xyb.repositoryVendor="GitHub" \
          --label org.opencontainers.image.revision="${{ github.sha }}" \
          --tag "$TAG" "$DOCKERFILE_PATH"
          docker push "$TAG"
        shell: bash
        env:
          TAG: 746905583608.dkr.ecr.eu-west-1.amazonaws.com/${{ inputs.codename }}-dbm:${{ steps.setuprevision.outputs.BUILD_REVISION }}
          DOCKERFILE_PATH: ${{ inputs.codename }}-dbm
      - if: inputs.svc == true
        name: Scan '${{ inputs.codename }}-svc'
        uses: freckle/wiz-action@v1
        with:
          wiz-client-id: ${{ secrets.WIZ_CLIENT_ID }}
          wiz-client-secret: ${{ secrets.WIZ_CLIENT_SECRET }}
          image: 746905583608.dkr.ecr.eu-west-1.amazonaws.com/${{ inputs.codename }}-svc:${{ steps.setuprevision.outputs.BUILD_REVISION }}
          custom-policies: Vulnerabilities policy - audit
      - if: inputs.ui == true
        name: Scan '${{ inputs.codename }}-ui'
        uses: freckle/wiz-action@v1
        with:
          wiz-client-id: ${{ secrets.WIZ_CLIENT_ID }}
          wiz-client-secret: ${{ secrets.WIZ_CLIENT_SECRET }}
          image: 746905583608.dkr.ecr.eu-west-1.amazonaws.com/${{ inputs.codename }}-ui:${{ steps.setuprevision.outputs.BUILD_REVISION }}
          custom-policies: Vulnerabilities policy - audit
      - if: inputs.dbm == true
        name: Scan '${{ inputs.codename }}-dbm'
        uses: freckle/wiz-action@v1
        with:
          wiz-client-id: ${{ secrets.WIZ_CLIENT_ID }}
          wiz-client-secret: ${{ secrets.WIZ_CLIENT_SECRET }}
          image: 746905583608.dkr.ecr.eu-west-1.amazonaws.com/${{ inputs.codename }}-dbm:${{ steps.setuprevision.outputs.BUILD_REVISION }}
          custom-policies: Vulnerabilities policy - audit
    timeout-minutes: 30
